name: 🔍 Preview Deployment

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'app-lecture/**'
    types: [opened, synchronize, reopened]

env:
  WORKING_DIRECTORY: './app-lecture'

jobs:
  preview-deploy:
    name: 🔍 Deploy Preview
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json
        
    - name: 📥 Install dependencies
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: npm ci
      
    - name: 🏗️ Build application
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: npm run build
      env:
        NEXT_PUBLIC_SUPABASE_URL: 'https://placeholder.supabase.co'
        NEXT_PUBLIC_SUPABASE_ANON_KEY: 'placeholder-anon-key'
        
    - name: 🚀 Deploy to Vercel Preview
      uses: amondnet/vercel-action@v25
      id: vercel-deploy
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ${{ env.WORKING_DIRECTORY }}
        github-comment: false
        
    - name: 🧪 Run quick smoke tests
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: |
        # Test que le site répond
        curl -f -s -o /dev/null ${{ steps.vercel-deploy.outputs.preview-url }} || exit 1
        echo "✅ Preview deployment accessible"
        
    - name: 📝 Comment PR with preview link
      uses: actions/github-script@v7
      with:
        script: |
          const previewUrl = '${{ steps.vercel-deploy.outputs.preview-url }}';
          const comment = `## 🔍 Preview Deployment Ready!
          
          ✅ **Application déployée avec succès**
          
          🔗 **Preview URL:** ${previewUrl}
          
          ### 🧪 Tests rapides effectués:
          - ✅ Application accessible
          - ✅ Build réussi
          - ✅ Pas d'erreurs critiques
          
          ### 🎮 Test manuel recommandé:
          1. Page d'accueil
          2. Mode démonstration
          3. Navigation entre écrans
          4. Responsive design
          
          ---
          *Cette preview sera automatiquement supprimée après le merge de la PR*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  # 🧪 Tests sur la preview
  preview-tests:
    name: 🧪 Preview Tests
    needs: preview-deploy
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json
        
    - name: 📥 Install dependencies
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: npm ci
      
    - name: 📦 Install Playwright
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: npx playwright install --with-deps chromium
      
    - name: 🧪 Run preview tests
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: |
        # Tests légers sur la preview
        echo "Running basic preview tests..."
        npx playwright test --project=chromium --grep="@smoke" || true
      env:
        PLAYWRIGHT_BASE_URL: ${{ needs.preview-deploy.outputs.preview-url }}
        
    - name: 📤 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: preview-test-results
        path: ${{ env.WORKING_DIRECTORY }}/test-results/
        retention-days: 3
